/*
 * OpenAPI спецификация Зоомагазина
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Pat
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-28T21:29:55.205903500+05:00[Asia/Yekaterinburg]")
public class Pat {
  public static final String SERIALIZED_NAME_TOY_ID = "toy_id";
  @SerializedName(SERIALIZED_NAME_TOY_ID)
  private String toyId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Статус (состояние) питомца
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    _("продажа"),
    
    _("на реализации"),
    
    _("возврат");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_NOTE = "note";
  @SerializedName(SERIALIZED_NAME_NOTE)
  private String note;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;


  public Pat toyId(String toyId) {
    
    this.toyId = toyId;
    return this;
  }

   /**
   * Get toyId
   * @return toyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0000-1111-2222-3333", value = "")

  public String getToyId() {
    return toyId;
  }


  public void setToyId(String toyId) {
    this.toyId = toyId;
  }


  public Pat name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Название питомца
   * @return name
  **/
  @ApiModelProperty(example = "Котенок", required = true, value = "Название питомца")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Pat status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Статус (состояние) питомца
   * @return status
  **/
  @ApiModelProperty(example = "продажа", required = true, value = "Статус (состояние) питомца")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Pat note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * Описание, пометки
   * @return note
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Очень милый", value = "Описание, пометки")

  public String getNote() {
    return note;
  }


  public void setNote(String note) {
    this.note = note;
  }


  public Pat createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Дата и время сохранения питомца в базе
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-07-01T15:00:00+01", value = "Дата и время сохранения питомца в базе")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Pat pat = (Pat) o;
    return Objects.equals(this.toyId, pat.toyId) &&
        Objects.equals(this.name, pat.name) &&
        Objects.equals(this.status, pat.status) &&
        Objects.equals(this.note, pat.note) &&
        Objects.equals(this.createdAt, pat.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(toyId, name, status, note, createdAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Pat {\n");
    sb.append("    toyId: ").append(toIndentedString(toyId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

